---

- name: deploy | 设置 pkg_dir 变量为 {{pkg_prefix}}/{{profile}}/{{product}}/{{srv_name}}
  set_fact: 
    pkg_dir : '{{pkg_prefix}}/{{profile}}/{{product}}/{{srv_name}}'

- name: deploy | 设置 build_id 变量为 {{ lookup("pipe", "ls -t {{pkg_dir}} | head -1 || /bin/true") }}
  set_fact:
    build_id: '{{ lookup("pipe", "ls -t {{pkg_dir}} | head -1 || /bin/true") }}'

- name: deploy | 设置 pkg_build_dir 变量为 {{pkg_dir}}/{{build_id}}
  set_fact: 
    pkg_build_dir: '{{pkg_dir}}/{{build_id}}'

- name: deploy | 设置 zip 包 deploy_dir 变量为 {{app_prefix}}/{{product}}/{{srv_name}}
  set_fact:
    deploy_dir: '{{app_prefix}}/{{product}}/{{srv_name}}'
  when: srv_type == 'zip'

- name: deploy | 设置 war 包 catalina_home 变量为 {{app_prefix}}/{{product}}/tomcat-{{srv_name}}
  set_fact:
    catalina_home: '{{app_prefix}}/{{product}}/tomcat-{{srv_name}}'
  when: srv_type == 'war'

- name: deploy | 设置 war 包 deploy_dir 变量为 {{catalina_home}}/webapps/{{srv_name}}
  set_fact:
    deploy_dir: '{{catalina_home}}/webapps/{{srv_name}}'
  when: srv_type == 'war'

- name: deploy | 停止 zip 包应用服务
  shell: 'set -m; . /etc/profile; . ~/.bash_profile; sh bin/run.sh stop || /bin/true'
  args:
    chdir: '{{deploy_dir}}'
  when: srv_type == 'zip'
  ignore_errors: yes

- name: deploy | 停止 war 包应用服务
  shell: 'set -m; . /etc/profile; . ~/.bash_profile; sh bin/shutdown.sh -force || /bin/true'
  args:
    chdir: '{{app_prefix}}/{{product}}/tomcat-{{srv_name}}'
  when: srv_type == 'war'

- name: deploy | 删除应用目录 {{deploy_dir}}
  file:
    state: absent
    path: '{{deploy_dir}}'

- name: deploy | 设置 zip 包 pkg_file 变量
  set_fact: 
    pkg_file: '{{ lookup("pipe", "ls {{pkg_build_dir}}/{{srv_name}}*.zip | head -n 1") }}'
  when: srv_type == 'zip'

- name: deploy | 设置 war 包 pkg_file 变量
  set_fact: 
    pkg_file: '{{ lookup("pipe", "ls {{pkg_build_dir}}/{{srv_name}}*.war | head -n 1") }}'
  when: srv_type == 'war'

- name: deploy | 部署 zip 包，解压 {{pkg_file}} 到 {{app_prefix}}/{{product}} 目录
  unarchive:
    src: "{{pkg_file}}"
    dest: "{{app_prefix}}/{{product}}"
  when: srv_type == 'zip' 

- name: deploy | zip 包服务，模板 bin/run.sh.j2 替换 {{deploy_dir}}/bin/run.sh
  template:
    src: bin/run.sh.j2
    dest: '{{deploy_dir}}/bin/run.sh'
  when: srv_type == 'zip'

- name: deploy | zip 包服务设置 {{deploy_dir}}/bin/run.sh 可执行权限
  file:
    state: file
    path: '{{deploy_dir}}/bin/run.sh'
    mode: 'u+x,g+x,o+x'
  when: srv_type == 'zip'

- name: deploy | 部署 war 包，创建 {{deploy_dir}} 目录
  file:
    path: '{{deploy_dir}}'
    state: directory
  when: srv_type == 'war'
  
- name: deploy | 部署 war 包，解压 {{pkg_file}} 到 {{deploy_dir}}
  unarchive:
    src: "{{pkg_file}}"
    dest: "{{deploy_dir}}"
  when: srv_type == 'war'

- name: deploy | 启动 zip 包服务
  shell: 'set -m; . /etc/profile; . ~/.bash_profile; sh bin/run.sh start'
  args:
    chdir: '{{deploy_dir}}'
    executable: /bin/bash
  when: srv_type == 'zip'

- name: deploy | 启动 war 包服务
  shell: 'set -m; . /etc/profile; . ~/.bash_profile; bin/catalina.sh start'
  args:
    chdir: '{{catalina_home}}'
    executable: /bin/bash
  when: srv_type == 'war'

- name: deploy | 设置 zip 包服务 pid_file 变量为 {{deploy_dir}}/{{srv_name}}.pid
  set_fact:
    pid_file: '{{deploy_dir}}/{{srv_name}}.pid'
  when: srv_type == 'zip'

- name: deploy | 设置 war 包服务 pid_file 变量为 {{catalina_home}}/temp/catalina.pid
  set_fact:
      pid_file: '{{catalina_home}}/temp/catalina.pid'
  when: srv_type == 'war'

- name: deploy | 等待服务启动，确保 {{pid_file}} 存在
  wait_for:
    path: '{{pid_file}}'
    state: present
    timeout: 15

- name: deploy | 设置 pid 变量
  shell: head -n1 {{pid_file}}
  register: pid_result

- name: deploy | 等待服务启动，进程号 {{pid_result.stdout}}，确保 /proc/{{pid_result.stdout}}/status 文件存在
  wait_for:
    path: /proc/{{pid_result.stdout}}/status
    state: present
    timeout: 15 
